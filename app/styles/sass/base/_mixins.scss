@mixin global-module($color, $background: '') {
  @if $background { background-color: $background; }
  color: $color;
  text-align: center;
  h1, h2, h3 {
    font-family: $type-body, Arial;
    font-weight: 700;
  }
  p, label {
    font-family: $type-header, sans-serif;
  }
}

@mixin form {
  input {
    height: 1.75em;
    font-size: 1em;
    padding: 0.4em 0.7em;
    border: 2px solid $color-tert-orange;
    color: lighten($color-sec-slate, 30%);
  }
}

@mixin btn($background, $border-color: none, $rounded: false) {
  background-color: $background;
  @if $border-color != none { border: 2px solid $border-color; }
  font-family: $type-header;
  font-size: 1em;
  line-height: 1;
  padding: 0.5em 1.5em;
  margin: 1em 0;
  @if $rounded == true {
    border-radius: 5px;
  }
  &:hover {
    background-color: lighten($background, 25%);
  }
}

// Sass Color Functions
// @function set-opacity($child) {
//   @return ($child * 5) + 10 + '%';
//   @debug 'You returned #{$child}';
// }
//
// @function bkg-color-pick($color, $child) {
//   @debug 'Child is: ' + $child + '%';
//   @return lighten($color, set-opacity($child));
// }
//
// @function hover-color-pick($color, $child) {
//   @return bkg-color-pick($color, $child + 3);
// }
//
// @mixin config-colors($color, $child) {
//   &:nth-child(1 + $child) {
//     background-color: bkg-color-pick($color, $child);
//     &:hover {
//       background-color: hover-color-pick($color, $child); // child is a number
//     }
//   }
// }

@mixin img-background($filepath) {
  background-image: url($filepath);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  height: 100%;
}
